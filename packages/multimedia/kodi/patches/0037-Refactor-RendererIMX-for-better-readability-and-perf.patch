From 1ba2204a33647b1b81ebc69e7744857a07b1dc23 Mon Sep 17 00:00:00 2001
From: Rudi <r.ihle@s-t.de>
Date: Sat, 24 Sep 2016 16:53:42 +0200
Subject: [PATCH 37/37] Refactor RendererIMX for better readability and
 performance

---
 .../VideoRenderers/HwDecRender/RendererIMX.cpp     | 24 ++++++++--------------
 .../VideoRenderers/HwDecRender/RendererIMX.h       |  4 ++--
 2 files changed, 11 insertions(+), 17 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererIMX.cpp b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererIMX.cpp
index aeef073..8569c72 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererIMX.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererIMX.cpp
@@ -34,14 +34,15 @@
 
 CRendererIMX::CRendererIMX()
 {
-  m_bufHistory.clear();
+  m_bufHistory[0] = m_bufHistory[1] = nullptr;
   g_IMXContext.Clear();
 }
 
 CRendererIMX::~CRendererIMX()
 {
   UnInit();
-  std::for_each(m_bufHistory.begin(), m_bufHistory.end(), Release);
+  SAFE_RELEASE(m_bufHistory[1]);
+  SAFE_RELEASE(m_bufHistory[0]);
   g_IMXContext.Clear();
   g_IMX.Deinitialize();
 }
@@ -141,24 +142,18 @@ bool CRendererIMX::RenderUpdateVideoHook(bool clear, DWORD flags, DWORD alpha)
   CDVDVideoCodecIMXBuffer *buffer = static_cast<CDVDVideoCodecIMXBuffer*>(m_buffers[m_iYV12RenderBuffer].hwDec);
   if (buffer)
   {
-    if (!m_bufHistory.empty() && m_bufHistory.back() != buffer || m_bufHistory.empty())
-    {
-      buffer->Lock();
-      m_bufHistory.push_back(buffer);
-    }
-    else if (!m_bufHistory.empty() && m_bufHistory.back() == buffer && flagsPrev == flags)
+    if (buffer == m_bufHistory[0] && flagsPrev == flags)
     {
       g_IMX.WaitVsync();
       return true;
     }
 
     flagsPrev = flags;
+    buffer->Lock();
 
-    if (m_bufHistory.size() > 2)
-    {
-      m_bufHistory.front()->Release();
-      m_bufHistory.pop_front();
-    }
+    SAFE_RELEASE(m_bufHistory[1]);
+    m_bufHistory[1] = m_bufHistory[0];
+    m_bufHistory[0] = buffer;
 
     // this hack is needed to get the 2D mode of a 3D movie going
     RENDER_STEREO_MODE stereo_mode = g_graphicsContext.GetStereoMode();
@@ -207,8 +202,7 @@ bool CRendererIMX::RenderUpdateVideoHook(bool clear, DWORD flags, DWORD alpha)
       }
     }
 
-    CDVDVideoCodecIMXBuffer *buffer_p = m_bufHistory.front();
-    g_IMXContext.Blit(buffer_p == buffer ? nullptr : buffer_p, buffer, srcRect, dstRect, fieldFmt);
+    g_IMXContext.Blit(m_bufHistory[1], m_bufHistory[0], srcRect, dstRect, fieldFmt);
   }
 
 #if 0
diff --git a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererIMX.h b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererIMX.h
index fc71e89..830b556 100644
--- a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererIMX.h
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/RendererIMX.h
@@ -62,8 +62,8 @@ protected:
   virtual int  GetImageHook(YV12Image *image, int source = AUTOSOURCE, bool readonly = false);
   virtual bool RenderUpdateVideoHook(bool clear, DWORD flags = 0, DWORD alpha = 255);
 
-  std::deque<CDVDVideoCodecIMXBuffer*> m_bufHistory;
-  static void Release(CDVDVideoCodecIMXBuffer *&t) { if (t) t->Release(); }
+private:
+  CDVDVideoCodecIMXBuffer *m_bufHistory[2];
 };
 
 #endif
-- 
1.9.1

